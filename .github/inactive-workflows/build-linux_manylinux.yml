name: linux_manylinux

on:
  push:
    branches:
      - dev
      - release-*
      #- refs/tags/*
      - refs/heads/*
      #- dlh/ch10040-azr-osx-lnxto-ga
  pull_request:
    branches:
      - '*'  # must quote since "*" is a YAML reserved character; we want a string

env:
  SUDO: 'sudo'

jobs:
  build-macos:
    if: true
    runs-on: ${{ matrix.os }}
    env:
      TILEDB_S3: ON
      TILEDB_AZURE: ON
      TILEDB_GCS: ON
      TILEDB_HDFS: ON
      TILEDB_STATIC: OFF
      TILEDB_SERIALIZATION: ON
      TILEDB_FORCE_BUILD_DEPS: ON
      MACOSX_DEPLOYMENT_TARGET: 10.14
      SUDO: 'sudo'
    strategy:
      matrix:
        os: [macos-10.15]
        environ: [x86_64, arm64]
        include:
          - environ: x86_64
            v_TILEDB_AZURE: ON
            v_TILEDB_SERIALIZATION: ON
            v_CXX: clang++
            v_ARTIFACT_OS: macOS_azure
            v_ARTIFACT_ARCH: 'intel64'
          - environ: arm64
            v_CXX: clang++
            v_ARTIFACT_OS: 'macos'
            v_ARTIFACT_ARCH: 'arm64'
            v_TILEDB_GCS: OFF
            v_TILEDB_WERROR: OFF
            v_CMAKE_OSX_ARCHITECTURES: "arm64"
            v_MACOSX_DEPLOYMENT_TARGET: 11

    steps:
      - name: set env vars
        shell: bash
        env:
          CXX: ${{ matrix.v_CXX }}
          ARTIFACT_OS: ${{ matrix.v_ARTIFACT_OS }}
          ARTIFACT_ARCH: ${{ matrix.v_ARTIFACT_ARCH }}
          TILEDB_GCS: ${{ matrix.v_TILEDB_GCS }}
          TILEDB_WERROR: ${{ matrix.v_TILEDB_WERROR }}
          CMAKE_OSX_ARCHITECTUR: ${{ matrix.v_CMAKE_OSX_ARCHITECTURES }}
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.v_MACOSX_DEPLOYMENT_TARGET }}
        run: |
          echo "CXX=${CXX}" >> "$GITHUB_ENV"
          echo "ARTIFACT_OS=${ARTIFACT_OS}" >> "$GITHUB_ENV"
          echo "ARTIFACT_ARCH=${ARTIFACT_ARCH}" >> "$GITHUB_ENV"
          echo "TILEDB_GCS=${TILEDB_GCS}" >> "$GITHUB_ENV"
          echo "TILEDB_WERROR=${TILEDB_WERROR}" >> "$GITHUB_ENV"
          echo "CMAKE_OSX_ARCHITECTUR=${CMAKE_OSX_ARCHITECTUR}" >> "$GITHUB_ENV"
          echo "MACOSX_DEPLOYMENT_TARGET=${MACOSX_DEPLOYMENT_TARGET}" >> "$GITHUB_ENV"

      - name: toplevel show environ
        shell: bash
        run: |
          set -x
          printenv
          
      - uses: actions/checkout@v2

      - uses: ./.github/actions/mac-release

  build-manylinux:
    runs-on: ${{ matrix.os }}
    env:
      CXX: g++
      CFLAGS: "-lrt"
      CXXFLAGS: "-lrt"
      ARTIFACT_OS: 'linux'
      ARTIFACT_ARCH: 'x86_64'
      SUDO: ''
    strategy:
      matrix:
        os: [ubuntu-20.04]
        environ: [standard, noavx2]
        include:
          - environ: standard
            v_CXX: g++
            v_CFLAGS: "-lrt"
            v_CXXFLAGS: "-lrt"
            v_ARTIFACT_OS: 'linux'
            v_ARTIFACT_ARCH: "x86_64"
            v_TILEDB_AVX2: ON
            v_SUDO: ''
          - environ: noavx2
            v_CXX: g++
            v_CFLAGS: "-lrt"
            v_CXXFLAGS: "-lrt"
            v_ARTIFACT_OS: 'linux'
            v_ARTIFACT_ARCH: "x86_64-noavx2"
            v_TILEDB_AVX2: OFF
            v_SUDO: ''
    steps:
      - name: set env vars
        shell: bash
        env:
          CXX: ${{ matrix.v_CXX }}
          CFLAGS: ${{ matrix.v_CFLAGS }}
          CXXFLAGS: ${{ matrix.v_CXXFLAGS }}
          ARTIFACT_OS: ${{ matrix.v_ARTIFACT_OS }}
          ARTIFACT_ARCH: ${{ matrix.v_ARTIFACT_ARCH }}
          TILEDB_AVX2: ${{ matrix.v_TILEDB_AVX2 }}
          SUDO: ${{ matrix.v_SUDO }}
        run: |
          echo "CXX=${CXX}" >> "$GITHUB_ENV"
          echo "CFLAGS=${CFLAGS}" >> "$GITHUB_ENV"
          echo "CXXFLAGS=${CXXFLAGS}" >> "$GITHUB_ENV"
          echo "ARTIFACT_OS=${ARTIFACT_OS}" >> "$GITHUB_ENV"
          echo "ARTIFACT_ARCH=${ARTIFACT_ARCH}" >> "$GITHUB_ENV"
          echo "TILEDB_AVX2=${TILEDB_AVX2}" >> "$GITHUB_ENV"
          echo "SUDO=${SUDO}" >> "$GITHUB_ENV"

      - uses: actions/checkout@v2

      - uses: ./.github/actions/manylinux
